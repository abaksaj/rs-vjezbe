from aiohttp import web
import json
import aiohttp
import asyncio

proizvodi = [
    {"id" : 1, "naziv" : "Laptop", "cijena": 5000},
    {"id" : 2, "naziv" : "Miš", "cijena": 100},
    {"id" : 3, "naziv" : "Monitor", "cijena": 1000},
    {"id" : 4, "naziv" : "Slušalice", "cijena": 50},
]

narudzbe = []
async def get_proizvodi(request):
    return web.json_response(proizvodi)


async def get_prizvod_id(request):
    proizvod_id = int(request.match_info["id"])
    proizvod = next(( p for p in proizvodi if p["id"] == proizvod_id),None)
    
    if proizvod:
        return web.json_response(proizvod)
    else:
    
        return web.json_response({'error': 'Proizvod s traženim IDom ne postoji' }, status=404)

async def post_narudzba(request):
    
    try:
        data = await request.json()
        proizvod_id = data.get("proizvod_id")
        kolicina = data.get("kolicina")

        
        proizvod = next((p for p in proizvodi if p["id"] == proizvod_id), None)
        if not proizvod:
            return web.json_response(
                {"error": "Proizvod s traženim ID-em ne postoji"}, status=404
            )

        
        nova_narudzba = {"proizvod_id": proizvod_id, "kolicina": kolicina}
        narudzbe.append(nova_narudzba)
        return web.json_response(narudzbe, status=201)

    except json.JSONDecodeError:
        return web.json_response({"error": "Invalid JSON format"}, status=400)

    
    
app = web.Application()
app.router.add_get('/proizvodi', get_proizvodi)
app.router.add_get('/proizvodi/{id}', get_prizvod_id)

 #Main korutina koja pokreće poslužitelj i testira ga
async def main():
    # Pokretanje poslužitelja
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, 'localhost', 8081)
    await site.start()
    #print("Poslužitelj radi na http://localhost:8081")


    async with aiohttp.ClientSession() as session:
        # Testiranje rute /proizvodi
        async with session.get('http://localhost:8081/proizvodi') as response:
            print("Status za /proizvodi:", response.status)
            print("Odgovor:", await response.json())

        # Testiranje rute /proizvodi/{id} za postojeći ID
        async with session.get('http://localhost:8081/proizvodi/1') as response:
            print("Status za /proizvodi/1:", response.status)
            print("Odgovor:", await response.json())

        # Testiranje rute /proizvodi/{id} za nepostojeći ID
        async with session.get('http://localhost:8081/proizvodi/99') as response:
            print("Status za /proizvodi/99:", response.status)
            print("Odgovor:", await response.json())

        # Testiranje rute /proizvodi/{id} za neispravan ID
        async with session.get('http://localhost:8081/proizvodi/abc') as response:
            print("Status za /proizvodi/abc:", response.status)
            print("Odgovor:", await response.json())
        

if __name__ == '__main__':
    asyncio.run(main())


